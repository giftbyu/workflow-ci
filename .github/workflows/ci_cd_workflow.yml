name: Automated Model Training and Deployment Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DAGSHUB_URI: https://dagshub.com/giftbyu/mlops.mlflow
  DOCKER_IMAGE_NAME: septbyu/workflow-ci 
  EXPERIMENT_NAME: "WaterPotability_Tuning_CI"
  CONDA_ENV_NAME: "water-potability-env"
  PROJECT_FOLDER: "MLProject_folder"

jobs:
  train-build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: ${{ env.CONDA_ENV_NAME }}
          environment-file: ${{ env.PROJECT_FOLDER }}/conda.yaml
          auto-update-conda: true

      - name: 3. Train Model with MLflow
        id: train
        env:
          MLFLOW_TRACKING_URI: ${{ env.DAGSHUB_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          cd ${{ env.PROJECT_FOLDER }}
          
          # Run with retry mechanism
          for i in {1..3}; do
            mlflow run . --experiment-name "$EXPERIMENT_NAME" 2>&1 | tee mlflow_output.txt
            if grep -q "MLflow Run ID" mlflow_output.txt; then
              break
            fi
            sleep 10
          done
          
          # Extract RUN_ID
          RUN_ID=$(grep -oP "MLflow Run ID: \K[a-f0-9]{32}" mlflow_output.txt)
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: 4. Download Model
        env:
          MLFLOW_TRACKING_URI: ${{ env.DAGSHUB_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          mlflow artifacts download --run-id "${{ env.RUN_ID }}" --artifact-path model -d model
          
          # Fix folder structure if needed
          if [ -f "model/model/MLmodel" ]; then
            mv model/model/* model/
            rm -r model/model
          fi

      - name: 5. Backup Model to Google Drive
        run: |
          sudo apt-get install -y rclone
          echo '${{ secrets.GDRIVE_CREDENTIALS }}' | base64 -d > gdrive_creds.json
          
          cat <<EOF > rclone.conf
          [gdrive]
          type = drive
          scope = drive
          service_account_file = $(pwd)/gdrive_creds.json
          EOF
          
          rclone copy model gdrive:${{ secrets.GDRIVE_FOLDER_ID }}/models/${{ env.RUN_ID }} \
            --config=rclone.conf \
            --progress

      - name: 6. Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 7. Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 8. Build Docker Image
        run: |
          # Use local model directory
          mlflow models build-docker -m "model" -n "${{ env.DOCKER_IMAGE_NAME }}"
          
          # Verify image
          docker image inspect ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: 9. Push Docker Image
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:latest