name: Kriteria 3 - Workflow CI-CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DAGSHUB_URI: https://dagshub.com/giftbyu/mlops.mlflow
  EXPERIMENT_NAME: "WaterPotability"  # Nama eksperimen tetap
  DOCKER_IMAGE_NAME: giftbyu/workflow-ci

jobs:
  train-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.7'

      - name: Install MLflow & Dependencies
        run: pip install mlflow==2.19.0 dagshub pandas scikit-learn

      - name: Run MLflow Project to Retrain Model
        env:
          MLFLOW_TRACKING_URI: ${{ env.DAGSHUB_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          mlflow run MLProject_folder \
            --experiment-name "$EXPERIMENT_NAME"

      - name: Get Latest Run ID
        id: get-run-id
        env:
          MLFLOW_TRACKING_URI: ${{ env.DAGSHUB_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          RUN_ID=$(mlflow runs list --experiment-name "$EXPERIMENT_NAME" --order-by "start_time DESC" --limit 1 | grep -oP "(?<=run_id: )\w+")
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        env:
          MLFLOW_TRACKING_URI: ${{ env.DAGSHUB_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          mlflow models build-docker \
            --model-uri "runs:/${{ env.RUN_ID }}/model" \
            --name "${{ env.DOCKER_IMAGE_NAME }}" \
            --enable-mlserver
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest