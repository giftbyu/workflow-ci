name: Kriteria 3 - Workflow CI-CD

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DAGSHUB_URI: https://dagshub.com/giftbyu/mlops.mlflow
  EXPERIMENT_NAME: "WaterPotability_Tuning" 
  DOCKER_IMAGE_NAME: giftbyu/workflow-ci
  CONDA_ENV_NAME: "mlflow-project" 
  PROJECT_FOLDER: "MLProject_folder" 

jobs:
  train-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4
        with:
          
          fetch-depth: 0

      - name: 2. Set up Miniconda and Create Environment from File
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: ${{ env.CONDA_ENV_NAME }}
          environment-file: ${{ env.PROJECT_FOLDER }}/conda.yaml
          auto-update-conda: true
          auto-activate-base: false
          use-only-tar-bz2: true 

      - name: 3. Run MLflow Project to Train Tuned Model
        id: train_step
        env:
          MLFLOW_TRACKING_URI: ${{ env.DAGSHUB_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        
        shell: bash -l {0}
        run: |
          echo "--- Starting MLflow Run ---"
          # Menjalankan MLProject dan menyimpan semua output ke file log
          # MLflow akan secara otomatis menggunakan conda.yaml untuk memastikan lingkungan yang benar
          mlflow run ${{ env.PROJECT_FOLDER }} --experiment-name "$EXPERIMENT_NAME" > mlflow_output.txt
          
          echo "--- MLflow Run Output ---"
          # Menampilkan output untuk tujuan debugging jika terjadi kesalahan
          cat mlflow_output.txt
          echo "-------------------------"
          
          # Mengekstrak Run ID dari output dengan pola yang benar dan tangguh
          # Pola ini mencari baris yang berisi "MLflow Run ID:"
          RUN_ID=$(grep -oP "MLflow Run ID: \K.+" mlflow_output.txt | tr -d '[:space:]')
          
          # Pemeriksaan kritis: Pastikan RUN_ID berhasil diekstrak
          if; then
            echo "::error::Failed to extract RUN_ID from MLflow output. Aborting."
            exit 1
          fi
          
          echo "Successfully extracted RUN_ID: $RUN_ID"
          # Menyimpan RUN_ID ke environment GitHub Actions untuk digunakan di langkah selanjutnya
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: 4. Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 5. Build and Push Docker Image with the Newly Trained Model
        run: |
          echo "Building Docker image for RUN_ID: ${{ env.RUN_ID }}"
          # Meneruskan RUN_ID sebagai build argument ke Dockerfile
          # Ini adalah langkah kunci untuk menghubungkan pelatihan dengan deployment
          docker build --build-arg RUN_ID=${{ env.RUN_ID }} -t ${{ env.DOCKER_IMAGE_NAME }}:latest -f Dockerfile.
          
          echo "Pushing Docker image to Docker Hub..."
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest