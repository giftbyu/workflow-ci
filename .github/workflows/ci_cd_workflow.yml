name: Automated Model Training and Deployment Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DAGSHUB_URI: https://dagshub.com/giftbyu/mlops.mlflow
  DOCKER_IMAGE_NAME: septbyu/workflow-ci 
  EXPERIMENT_NAME: "WaterPotability_Tuning_CI"
  CONDA_ENV_NAME: "water-potability-env"
  PROJECT_FOLDER: "MLProject_folder"

jobs:
  train-build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Set up Miniconda and Create Training Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: ${{ env.CONDA_ENV_NAME }}
          environment-file: ${{ env.PROJECT_FOLDER }}/conda.yaml
          auto-update-conda: true
          auto-activate-base: false
          use-only-tar-bz2: true

      - name: 3. Run MLflow Project to Train Tuned Model
        id: train_step
        env:
          MLFLOW_TRACKING_URI: ${{ env.DAGSHUB_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        shell: bash -l {0}
        run: |
          mlflow run ${{ env.PROJECT_FOLDER }} --experiment-name "$EXPERIMENT_NAME" > mlflow_output.txt
          RUN_ID=$(grep -oP "MLflow Run ID: \K.+" mlflow_output.txt | tr -d '[:space:]')
          if [ -z "$RUN_ID" ]; then
            echo "::error::Failed to extract RUN_ID"
            exit 1
          fi
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: 4. Download Model Artifacts
        env:
          MLFLOW_TRACKING_URI: ${{ env.DAGSHUB_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          pip install mlflow==2.19.0
          mlflow artifacts download -u "runs:/${{ env.RUN_ID }}/model" -d model

      - name: 5. Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 6. Verify Docker Login
        run: |
          echo "Verifying Docker login..."
          docker info

      - name: 7. Create Dockerfile
        run: |
          cat <<EOT > Dockerfile
          FROM python:3.12-slim
          RUN pip install mlflow==2.19.0 pandas
          COPY model /model
          EXPOSE 5000
          CMD ["mlflow", "models", "serve", "-m", "/model", "-p", "5000"]
          EOT

      - name: 8. Build and Push Docker Image
        run: |
          # Build image
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .
          
          # Verify image exists locally
          docker images
          
          # Push image
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest